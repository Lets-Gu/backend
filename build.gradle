plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'avengers'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // 테스트용 H2
    testImplementation 'com.h2database:h2'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    // cloudinary
    implementation 'com.cloudinary:cloudinary-http44:1.37.0'

    // ✅ QueryDSL (Jakarta 버전)
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

task copySubmoduleConfigs(type: Copy) {
    from('module') {
        include '**/*.yml'
    }
    into 'src/main/resources'

    doFirst {
        println "Copying configuration files from module to src/main/resources"
    }

    doLast {
        println "Configuration files copied successfully"
    }
}

// processResources 태스크가 실행되기 전에 설정 파일 복사
processResources.dependsOn copySubmoduleConfigs

// JAR 파일명 고정
bootJar {
    archiveFileName = 'app.jar'
}

jar {
    enabled = false
}

